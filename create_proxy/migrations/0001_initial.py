# Generated by Django 3.2.9 on 2022-02-12 15:56

import create_proxy.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('EMPLOYER', 'Employer'), ('CANDIDATE', 'Candidate')], default='CANDIDATE', max_length=50)),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Name of User')),
                ('email', models.EmailField(error_messages={'unique': 'Email ID already exists'}, max_length=254, unique=True, verbose_name='Enter Your Email Id')),
                ('username', models.CharField(max_length=250)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100)),
                ('job_description', models.CharField(default=' ', max_length=200)),
                ('location', models.CharField(max_length=100)),
                ('skills_required', models.CharField(max_length=255)),
                ('salary', models.PositiveIntegerField()),
                ('monthly_annually', models.CharField(choices=[('p.m.', 'Monthly'), ('p.a.', 'Annual')], default='p.a', max_length=20, verbose_name='Monthly or Annual')),
                ('last_date_of_applying', models.DateField(validators=[create_proxy.models.present_future_dates])),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('create_proxy.user',),
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('create_proxy.user',),
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('q1', models.TextField(max_length=250, verbose_name='What are your strengths and weakness?')),
                ('q2', models.TextField(max_length=250, verbose_name='Describe your past experience in detail or any project that you have done related to our job profile if not then type N.A.')),
                ('q3', models.TextField(max_length=200, verbose_name='When could you start?')),
                ('jobpost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='create_proxy.jobpost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'jobpost')},
            },
        ),
        migrations.AddField(
            model_name='jobpost',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='create_proxy.employer'),
        ),
        migrations.CreateModel(
            name='EmployerMore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_company', models.CharField(max_length=30, unique=True)),
                ('website', models.CharField(max_length=500)),
                ('contact_number', models.CharField(max_length=10, validators=[create_proxy.models.only_int])),
                ('company_email_id', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='create_proxy.employer')),
            ],
        ),
        migrations.CreateModel(
            name='CandidateMore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='', max_length=100)),
                ('birth_date', models.DateField(validators=[create_proxy.models.no_future_present_dates])),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('not_say', 'Decline to answer')], max_length=30)),
                ('marital_status', models.CharField(choices=[('married', 'Married'), ('unmarried', 'Unmarried')], max_length=30)),
                ('qualification', multiselectfield.db.fields.MultiSelectField(choices=[('10th', 'Secondary (10th Pass)'), ('12th Science', 'Higher Secondary(Science 12th Pass )'), ('12th Commerce', 'Higher Secondary(Commerce 12th Pass)'), ('12th Arts', 'Higher Secondary(Arts 12th Pass)'), ('BCA', 'Bachelor of Computer Applications'), ('BBA', 'Bachelor of Business Administration'), ('BBM', 'Bachelor of Business Management'), ('MCA', 'Master of Computer Application'), ('MBA', 'Master of Business Administration'), ('BSE', 'Bachelor of Software Engineering'), ('B.A', 'Bachelor of Arts'), ('B.TECH', 'Bachelor of Technology')], max_length=76)),
                ('contact_number', models.CharField(max_length=10, validators=[create_proxy.models.only_int])),
                ('hobbies', models.CharField(max_length=100)),
                ('skills', models.CharField(max_length=100)),
                ('objective', models.CharField(max_length=500)),
                ('upload_cv', models.FileField(blank=True, upload_to='media')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='create_proxy.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='applied_jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('in-touch', 'In-Touch'), ('Selected', 'selected'), ('Rejected', 'rejected')], default='in-touch', max_length=50)),
                ('candidate', models.ForeignKey(default='-1', on_delete=django.db.models.deletion.CASCADE, to='create_proxy.candidatemore')),
                ('employer', models.ForeignKey(default='-1', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(default='-1', on_delete=django.db.models.deletion.CASCADE, to='create_proxy.jobpost')),
            ],
            options={
                'unique_together': {('candidate', 'post')},
            },
        ),
    ]
